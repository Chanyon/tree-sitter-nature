foo = fn((1,([1,2,3], true)), foo())
i32 bar = (1 + 2) * 3
(int, bool) f = (1, true)
foo((1,([1,2,3], true)), foo())
var a = fn(int i):i16 {}
foo()
fn foo(A a, int b):i32 {
  return 1
}
type T = (bool, i32)
var a = foo()
type T = gen i8|u8|null|A
type Option_a = i32|T
type S = struct {
  int a
  int b
  var a = fn(self s, int c):int{
    return s.a + s.b + c
  }
}